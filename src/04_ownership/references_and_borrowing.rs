
fn main() {
    println!("hello, references and borrowing.");

    // 引用： 像一个指针，因为它是一个地址，我们可以由此访问存储于该地址的属于其他变量的数据。与指针不同的是，
    // 引用确保指向某个特定类型的有效值。 使用 &符号在变量前面

    // 解引用： 它使用解引用运算符 `*` , 将引用的变量进行解引用，从而获得该引用地址对应堆栈上的数据

    // 在rust 中 引用称之为借用， 也就是 有可变借用和 不可变借用
    

    // 引用的规则:
    // 1. 在任意给定时间，要么只能有一个可变引用， 要么只能有多个不可变引用
    // 2. 引用必须总是有效的，否则就可能会造成悬垂引用的问题
}