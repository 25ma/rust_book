fn main () {

    // 变量与可变性
    // 变量：mut 表示可变变量,声明使用 let
    // 
    // let a : i32 = 1; 
    // 
    // 常量：是绑定到 一个名称的不允许改变的值，与变量的区别就是 不允许对常量使用mut,常量总是不可变
    //     声明使用const, 可以在任何作用域中申明，包括全局作用域， 常量只能被设置为常量表达式，而不可以是其他任何只能在运行时计算出的值
    //  
    // const S :u32 = 2 * 4 * 365;
    // 
    // 隐藏： 定义一个与之前已经存在的同名变量的新变量
    // let x = 1;
    // let x = 2;
    // 
    // 以上就表示 第一次声明的x 被第二次声明的x 变量 隐藏了
    //
    let a:i32 = 1;

    println!("a = {}", a);

    let s = 6;
    println!("s = {}", s);
    let s = 7; 
    println!("s = {}", s);

    // ps 隐藏可以改变值的类型 但是 mut 不可以 

    let s1 = "      ";
    let s1 = s1.len(); // 这种方式是成立的

    println!("s1 = {}", s1);

    let mut m1 = "    ". to_string();
    // m1 = m1.len();
    let m2 = ", 25ma".to_string();
    m1 += &m2;

    println!("m1= {}", m1);
}